В шаблоне комментария мы видим несколько вложенных шаблонов и активное использование тегов $comment.* Рассмотрим вложенные шаблоны:
$class1 - html класс нечетных комментариев
$class2 - html класс четных комментариев (в данном примере класс отсутствует)
$index - целое число, индекс комментария, используется если, к примеру, был обявлен ранее шаблон списка ul
$indexplus- тоже самое , что и $index но на 1 больше, поэтому нумерация начнется с 1
$comment.date - шаблон даты комментария, не обязательный шаблон
$quotebuttons - вложенный шаблон кнопок цитирования, имеют смысл при открытом комментировании. Если комментирование отключено, то эти кнопки не показываются

Как видим вложенных шаблонов немного, зато много свойств у $comment, перечислим их

$comment.id - уникальный id (число) комментария
$comment.post - уникальный id (число) записи для которой комментарий
$comment.author - уникальный id (число) автора комментария
$comment.parent - уникальный id (число) родительского комментария, в настоящее время не используется и = 0
$comment.posted - дата добавления в формате timestamp (целое число)
$comment.status - статус комментария, только в бд версии, возможные значения: 'approved','hold','spam','deleted'
$comment.content - отфильтрованный текст комментария
$comment.authorlink - html ссылка на автора комментария, может быть только имя комментатора в зависимости от настроек сайта
$comment.date - отформатированная строка дата отправления комментария, для этого тега можно задать свой шаблон. Если шаблони не задан, то используется формат по умолчанию
$comment.time - время отправления комментария, используется шаблон даты "H:i" (час:минуты)
$comment.localstatus - состояние комментария, переведенная на язык строка, например "одобрен", "задержан"
$comment.website - адрес сайта комментатора
$comment.url - адрес записи с (#) внутристраничной ссылкой на комментарий
$comment.posttitle - заголовок записи для которой комментарий
$comment.rawcontent - неотфильтрованный текст комментатора
$comment.IP - IP адрес комментатора
$comment.md5email - md5 хеш E-Mail комментатора
$comment.gravatar - html картинка аватара комментатора с сайта http://www.gravatar.com/

Понятно, что не все перечисленные теги используются в шаблоне комментария, а только их часть. Следует остановиться на шаблоне даты $comment.date - вы можете просто вставить этот тег в шаблон, а если хотите задать свой собственный шаблон даты, то вам следует это сделать привычным для формата темы способом $comment.date = [ваш формат даты] Формат даты - это формат даты для функции PHP date, в данном примере это "d.m.Y"

Обратим внимание на HTML разметку, в частности - шаблон hCard, в нашем случае это <span class="vcard author"> Особого значения это не имеет, но вероятно поможет поисковикам более благосклонно относится к вашему сайту потому, что поисковики обрабатывают микроформаты hCard.

Следующий момент - пустой тег div с классом moderationbuttons. Он предназначен для кнопок модерирования, которые будут вставлены скриптом (js/litepublisher/moderate.js) для  залогиненных поситителей в зависимости от прав. Для администратора и модератора будут добавлены все кнопки (задержать, одобрить, удалить, редактировать) для каждого комментария. Для рядовых комментаторов могут быть показаны кнопки редактировать и/или удалить в зависимости от настроек (в админке настройки/комментарии галочки прав).  Разберем шаблон
<div class="moderationbuttons" data-idcomment="$comment.id" data-idauthor="$comment.author"></div>

В атрибутах data* передана информация о текущем комментарии, а именно:
$comment.id - уникальный id комментария
$comment.author - уникальный id автора

Вы должны обязательно вставить эти атрибуты для передачи данных скрипту. Чтобы HTML не ругался на вашу тему, она должна поддерживать RDFa  (указывается в DOCTYPE) или быть HTML 5 версии. Чтобы вместо ряда кнопок первоначально показывалась одна кнопка "E", следует добавить класс hidden к  moderationbuttons. Тогда будет видна только одна кнопка E, по клику заменяется на кнопки модерирования.

Чтобы скрипт (js/litepublisher/moderate.js) смог коректно отработать, ему нужна дополнительная информация о структуре HTML списка комментария, необходимо в скрипт передать jquery селекторы. Скрипт следует вставлять в шаблон content.post.templatecomments.regform задекларированный ранее. Здесь, в теме по умолчанию отсутствует  скрипт потому, что  (js/litepublisher/moderate.js) имеет значения по умолчанию равные теме по умолчанию. Продемонстрируем полный текст возможного скрипта:

<script type="text/javascript"> ltoptions.theme.comments = $.extend(true, ltoptions.theme.comments, {
        // список комментариев в виде селектора (включает символ # для id списка)
        comments: "#commentlist",
        // селектор списка задержанных комментариев, включая символ# для id
        hold: "#holdcommentlist",
        // селектор одиночного комментария, полный получается если прибавить id, пример#comment-357
        comment: "#comment-",
        // селектор текста комментария, к нему прибавляется id, пример #commentcontent-357
        content: "#commentcontent-",
        // селектор владельца, куда будут вставлены кнопки модерирования, в теме по умолчанию это <div class="moderationbuttons" ...
        buttons:".moderationbuttons",
        // шаблон кнопки модерирования, %%title%% будет заменен на название кнопки (одобрить, задержать, редактировать, удалить)
        button: '<button type="button" class="button"><span>%%title%%</span></button>',
        //класс кнопки "Ответить"
        replyclass: "replycomment",
        //клас кнопки "Цитировать"
quoteclass : "quotecomment",
        // селектор формы комментариев, здесь id тега form
        form: "#commentform",
        // селектор редактора, то есть textarea формы
        editor: "#comment"
      });
</script>
      
Естественно, что в вашей теме не потребуется указывать все эти селекторы, если они совпадают с темой по умолчанию. Например, если у вас будет другой только шаблон кнопки модерирования, то достаточно указать только ее одну:

<script type="text/javascript"> ltoptions.theme.comments = $.extend(true, ltoptions.theme.comments, {
        button: '<a href=#">%%title%%</a>'
      });
</script>

Напомним, что этот скрипт следует добавлять к шаблону content.post.templatecomments.regform задекларированный ранее.

С комментариями практически все - остались только пингбеки. Вот шаблон пингбеков:

