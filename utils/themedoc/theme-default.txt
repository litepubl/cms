Следующий шаблон - это мета, в котором собраны разные ссылки, например на RSS записей икомментариев и другие полезные ссылки.
sidebar.meta.item = [<li><a $class href="$link" title="$title">$icon$text</a>$subitems</li>]

В шаблон$item здесь добавлен тег $class - это html класс ссылки.  Чтобы задать html класс сылки в виджете мета есть дополнительный шаблон $classes, которого больше ни у кого нет. Зададим шаблон для классов:
sidebar.meta.classes = [rss=rss,comments=rss-comments,foaf=foaf]

Этот шаблон не является html шаблоном, как другие. В нем находятся имена классов в формате тип_ссылки=название_html_класса разделенными запятыми. Если класс не задан, то в сгенерированном html виджета не будет класса у ссылки. Известны следующие типы ссылок:

rss - ссылка на RSS записей
comments - ссылка на RSS комментариев
media - ссылка на RSS файлов
foaf - xml документ FOAF
profile - ссылка на профиль
sitemap- ссылка на карту сайта

Мы закончили с шаблонами первого сайдбара - все недостающие шаблоны стандартных виджетов будут взяты из шаблона виджета по умолчанию. Добавим второй сайдбар:

$template.sidebar1 = [
  $widget = [
  <li>
    <div class="rubric">$title</div>
    $items = [
    <ul>
       $item = [<li><a href="$link" title="$title">$icon$text</a>
$subcount = [<strong>($itemscount)</strong>]
$subitems = [<ul>$item</ul>]
</li>]
    </ul>
    ]
  </li>
]
]

После чего приступаем к обявлению шаблона свежих записей:

sidebar1.posts = [
		<li class="lastposts">
			<div class="rubric">$title</div>
    $items = [
				<ul>
					$item = [<li><a href="$post.link" rel="bookmark" title="$lang.permalink $post.title">$post.title</a><br />
							<small>$post.date</small></li>]
			    </ul>
    ]
			</li>
]

Описание тегов смотрите в комментариях к первому сайдбару. Следующим зададим шаблон свежих комментариев:

sidebar1.comments = [
		<li class="lastcomments">
			<div class="rubric">$title</div>
    $items = [
				<ul>
					$item = [<li><a href="$link#comment-$id" title="$name $onrecent $title">$name $onrecent $title</a>: $content...</li>
					]
				</ul>
    ]
		</li>
]

Теги шаблона виджета свежих комментариев смотрите в первом сайдбаре. Следующий виджет - мета:

sidebar1.meta = [
	<li class="meta">
				<div class="rubric">$title</div>
$items = [
				<ul>
				      $item = [<li><a $class href="$link" title="$title">$icon$text</a>$subitems</li>]
				</ul>
    ]
			</li>
    $classes= [rss=rss,comments=rss-comments,foaf=foaf]
]

Остаются еще два глобальных шаблона для поддержки аяксовых виджетов:
$template.ajaxwidget = [<span class="ajaxwidget" rel="widget-$id-$sidebar"></span> $title]
$template.inlinewidget = [<span class="inlinewidget"></span> $title]

Эти два шаблона определяют html код, который будет вставлен вместо заголовка виджета ($title) и связан с javascript библиотекой LitePublisher, а именно скрипты в файле js/litepublisher/widgets.js. Первый шаблон $ajaxwidget является шаблоном для подгружаемого виджета, второй $inlinewidget является имитацией аяксового виджета и его контент не подгружается отдельным http запросом, а вставлен в html комментарий страницы, тем самым уменьшая нагрузку на сервер и ускоряя работу сайта, так как в отличии от $ajaxwidget контент $inlinewidget появляется мгновенно. Внутри этих двух шаблонов доступны следующие теги:

$id - id виджета, целое число
$sidebar - номер сайдбара, целое число
$title - заголовок виджета

Для примера приведу шаблоны для предыдущих версий:
;$template.ajaxwidget = [<a onclick="widget_load(this, $id, $sidebar)">$title</a>]
;$template.inlinewidget = [<a rel="inlinewidget" href="">$title</a>]

Все, описание шаблонов виджетов закончено.  На этом тема закончена. Все шаблоны движка полностью описаны. Одновременно вы имеете готовую рабочую тему и документацию к ней в одном файле. 

6. Дополнительные шаблоны $custom. Иногда возникает потребность в тегах, которые отсутствуют в формате темы. LitePublisher предоставляет такую возможность - добавление своих собственных тегов. Эти теги имеют вид $custom.* и могут использоваться в любом месте темы. Создадим для примера тег $custom.test:
;$custom.test = [<h2>Мой собственный тег  test</h2>]

(Убирите ;  в начале строки, чтобы шаблон раскомментировать) Тег $custom.test вы можете вставлять в любом из имеющихся шаблонов. Есть также возможность редактировать некоторые из пользовательских тегов в админке, для этого надо описать этот тег примерно следующим образом (Убирите ;  в начале строки, чтобы шаблон раскомментировать):
;$custom.test.admin = [
$title = [Установка значений для тега $custom.test]
$type = [combo]
$values = [simple test, testing tag, custom tag]
]

Шаблон для админки включает в себя тег $title - заголовок для формы редактирования, тег type, который может иметь одно из следующих значений:

text - однострочный редактор
editor - многострочный редактор
combo - комбобокс, требуется для него еще тег $values
radio - радиокнопки, требуется для них $values

$values задаётся простым перечислением через запятую текстов, которые можно выбрать в комбобоксе или радиокнопками.

Полное окончание темы. Все. Удачных разработок!